---

- name: Add haproxy balancer node
  hosts: balancers
  become: true
  become_method: sudo
  any_errors_fatal: true
  gather_facts: true
  vars_files:
    - vars/main.yml
    - vars/system.yml
    - "vars/{{ ansible_os_family }}.yml"
  vars:
    add_balancer: true

  pre_tasks:
    - import_tasks: tasks/check_system.yml

    - import_tasks: tasks/hostname.yml
      when: hostname is defined and hostname | length > 0
      tags: hostname

    - import_tasks: tasks/sysctl.yml
      tags: [ sysctl, kernel ]

    - name: Make sure the gnupg package is present
      apt:
        name: gnupg
        state: present
        update_cache: yes
      environment: '{{ proxy_env | default({}) }}'
      when: ansible_os_family == "Debian" and installation_method == "repo"
      tags: [ add_repo, install_packages, install_postgres ]

    - name: Firewall | build a firewall_ports_dynamic_var
      set_fact:
        firewall_ports_dynamic_var: "{{ firewall_ports_dynamic_var |default([]) }} + {{ firewall_allowed_tcp_ports_for[item] }}"
      loop: '{{ hostvars[inventory_hostname].group_names }}'
      when: firewall_enabled_at_boot|bool
      tags: firewall

    - name: Firewall | build a firewall_rules_dynamic_var
      set_fact:
        firewall_rules_dynamic_var: "{{ firewall_rules_dynamic_var |default([]) }} + {{ firewall_additional_rules_for[item] }}"
      loop: '{{ hostvars[inventory_hostname].group_names }}'
      when: firewall_enabled_at_boot|bool
      tags: firewall

  roles:
    - role: ansible-role-firewall
      environment: '{{ proxy_env | default({}) }}'
      vars:
        firewall_allowed_tcp_ports: '{{ firewall_ports_dynamic_var | unique }}'
        firewall_additional_rules: '{{ firewall_rules_dynamic_var | unique }}'
      when: firewall_enabled_at_boot|bool
      tags: firewall

  tasks:
    - meta: flush_handlers

    - import_tasks: tasks/haproxy.yml
      when: with_haproxy_load_balancing == "true"
      tags: load_balancing

